ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB71:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_ADC1_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_ADC1_Init();
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 3


  91:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Infinite loop */
  97:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  98:Core/Src/main.c ****   while (1)
  99:Core/Src/main.c ****   {
 100:Core/Src/main.c ****     /* USER CODE END WHILE */
 101:Core/Src/main.c ****     CDC_Transmit_FS("Fut mame", 9);
 102:Core/Src/main.c ****     HAL_Delay(500);
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 104:Core/Src/main.c ****   }
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief System Clock Configuration
 110:Core/Src/main.c ****   * @retval None
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** void SystemClock_Config(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     Error_Handler();
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_USB;
 147:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 4


 148:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 149:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 157:Core/Src/main.c ****   * @param None
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** static void MX_ADC1_Init(void)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Common config
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   hadc1.Instance = ADC1;
 176:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 177:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 178:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 179:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 180:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 181:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 182:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Configure Regular Channel
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 190:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 191:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 192:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****     Error_Handler();
 195:Core/Src/main.c ****   }
 196:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief GPIO Initialization Function
 204:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 5


 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** static void MX_GPIO_Init(void)
 208:Core/Src/main.c **** {
  26              		.loc 1 208 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 211:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 211 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 211 3 view .LVU2
  37              		.loc 1 211 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 211 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 211 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 211 3 view .LVU6
 212:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 212 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 212 3 view .LVU8
  53              		.loc 1 212 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 212 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00403 		and	r3, r3, #4
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 212 3 view .LVU11
  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 212 3 view .LVU12
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** }
  65              		.loc 1 214 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 6


  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE71:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	Error_Handler:
  86              	.LFB72:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE END 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** void Error_Handler(void)
 225:Core/Src/main.c **** {
  87              		.loc 1 225 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 226:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 227:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 228:Core/Src/main.c ****   __disable_irq();
  93              		.loc 1 228 3 view .LVU15
  94              	.LBB6:
  95              	.LBI6:
  96              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 7


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 8


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 9


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  97              		.loc 2 140 27 view .LVU16
  98              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  99              		.loc 2 142 3 view .LVU17
 100              		.syntax unified
 101              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 102 0000 72B6     		cpsid i
 103              	@ 0 "" 2
 104              		.thumb
 105              		.syntax unified
 106              	.L6:
 107              	.LBE7:
 108              	.LBE6:
 229:Core/Src/main.c ****   while (1)
 109              		.loc 1 229 3 discriminator 1 view .LVU18
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****   }
 110              		.loc 1 231 3 discriminator 1 view .LVU19
 229:Core/Src/main.c ****   while (1)
 111              		.loc 1 229 9 discriminator 1 view .LVU20
 112 0002 FEE7     		b	.L6
 113              		.cfi_endproc
 114              	.LFE72:
 116              		.section	.text.MX_ADC1_Init,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	MX_ADC1_Init:
 123              	.LFB70:
 161:Core/Src/main.c **** 
 124              		.loc 1 161 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 16
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 00B5     		push	{lr}
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 14, -4
 132 0002 85B0     		sub	sp, sp, #20
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 24
 167:Core/Src/main.c **** 
 135              		.loc 1 167 3 view .LVU22
 167:Core/Src/main.c **** 
 136              		.loc 1 167 26 is_stmt 0 view .LVU23
 137 0004 0023     		movs	r3, #0
 138 0006 0193     		str	r3, [sp, #4]
 139 0008 0293     		str	r3, [sp, #8]
 140 000a 0393     		str	r3, [sp, #12]
 175:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 10


 141              		.loc 1 175 3 is_stmt 1 view .LVU24
 175:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 142              		.loc 1 175 18 is_stmt 0 view .LVU25
 143 000c 0F48     		ldr	r0, .L13
 144 000e 104A     		ldr	r2, .L13+4
 145 0010 0260     		str	r2, [r0]
 176:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 146              		.loc 1 176 3 is_stmt 1 view .LVU26
 176:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 147              		.loc 1 176 27 is_stmt 0 view .LVU27
 148 0012 8360     		str	r3, [r0, #8]
 177:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 149              		.loc 1 177 3 is_stmt 1 view .LVU28
 177:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 150              		.loc 1 177 33 is_stmt 0 view .LVU29
 151 0014 0373     		strb	r3, [r0, #12]
 178:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 152              		.loc 1 178 3 is_stmt 1 view .LVU30
 178:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 153              		.loc 1 178 36 is_stmt 0 view .LVU31
 154 0016 0375     		strb	r3, [r0, #20]
 179:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 155              		.loc 1 179 3 is_stmt 1 view .LVU32
 179:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 156              		.loc 1 179 31 is_stmt 0 view .LVU33
 157 0018 4FF46022 		mov	r2, #917504
 158 001c C261     		str	r2, [r0, #28]
 180:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 159              		.loc 1 180 3 is_stmt 1 view .LVU34
 180:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 160              		.loc 1 180 24 is_stmt 0 view .LVU35
 161 001e 4360     		str	r3, [r0, #4]
 181:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 162              		.loc 1 181 3 is_stmt 1 view .LVU36
 181:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 163              		.loc 1 181 30 is_stmt 0 view .LVU37
 164 0020 0123     		movs	r3, #1
 165 0022 0361     		str	r3, [r0, #16]
 182:Core/Src/main.c ****   {
 166              		.loc 1 182 3 is_stmt 1 view .LVU38
 182:Core/Src/main.c ****   {
 167              		.loc 1 182 7 is_stmt 0 view .LVU39
 168 0024 FFF7FEFF 		bl	HAL_ADC_Init
 169              	.LVL0:
 182:Core/Src/main.c ****   {
 170              		.loc 1 182 6 view .LVU40
 171 0028 60B9     		cbnz	r0, .L11
 189:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 172              		.loc 1 189 3 is_stmt 1 view .LVU41
 189:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 173              		.loc 1 189 19 is_stmt 0 view .LVU42
 174 002a 0023     		movs	r3, #0
 175 002c 0193     		str	r3, [sp, #4]
 190:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 176              		.loc 1 190 3 is_stmt 1 view .LVU43
 190:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 177              		.loc 1 190 16 is_stmt 0 view .LVU44
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 11


 178 002e 0122     		movs	r2, #1
 179 0030 0292     		str	r2, [sp, #8]
 191:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 180              		.loc 1 191 3 is_stmt 1 view .LVU45
 191:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 181              		.loc 1 191 24 is_stmt 0 view .LVU46
 182 0032 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****   {
 183              		.loc 1 192 3 is_stmt 1 view .LVU47
 192:Core/Src/main.c ****   {
 184              		.loc 1 192 7 is_stmt 0 view .LVU48
 185 0034 01A9     		add	r1, sp, #4
 186 0036 0548     		ldr	r0, .L13
 187 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 188              	.LVL1:
 192:Core/Src/main.c ****   {
 189              		.loc 1 192 6 view .LVU49
 190 003c 20B9     		cbnz	r0, .L12
 200:Core/Src/main.c **** 
 191              		.loc 1 200 1 view .LVU50
 192 003e 05B0     		add	sp, sp, #20
 193              	.LCFI4:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 0040 5DF804FB 		ldr	pc, [sp], #4
 198              	.L11:
 199              	.LCFI5:
 200              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 201              		.loc 1 184 5 is_stmt 1 view .LVU51
 202 0044 FFF7FEFF 		bl	Error_Handler
 203              	.LVL2:
 204              	.L12:
 194:Core/Src/main.c ****   }
 205              		.loc 1 194 5 view .LVU52
 206 0048 FFF7FEFF 		bl	Error_Handler
 207              	.LVL3:
 208              	.L14:
 209              		.align	2
 210              	.L13:
 211 004c 00000000 		.word	.LANCHOR0
 212 0050 00240140 		.word	1073816576
 213              		.cfi_endproc
 214              	.LFE70:
 216              		.section	.text.SystemClock_Config,"ax",%progbits
 217              		.align	1
 218              		.global	SystemClock_Config
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	SystemClock_Config:
 224              	.LFB69:
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 225              		.loc 1 113 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 80
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 12


 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 00B5     		push	{lr}
 230              	.LCFI6:
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 14, -4
 233 0002 95B0     		sub	sp, sp, #84
 234              	.LCFI7:
 235              		.cfi_def_cfa_offset 88
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 236              		.loc 1 114 3 view .LVU54
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 237              		.loc 1 114 22 is_stmt 0 view .LVU55
 238 0004 2822     		movs	r2, #40
 239 0006 0021     		movs	r1, #0
 240 0008 0DEB0200 		add	r0, sp, r2
 241 000c FFF7FEFF 		bl	memset
 242              	.LVL4:
 115:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 243              		.loc 1 115 3 is_stmt 1 view .LVU56
 115:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 244              		.loc 1 115 22 is_stmt 0 view .LVU57
 245 0010 0023     		movs	r3, #0
 246 0012 0593     		str	r3, [sp, #20]
 247 0014 0693     		str	r3, [sp, #24]
 248 0016 0793     		str	r3, [sp, #28]
 249 0018 0893     		str	r3, [sp, #32]
 250 001a 0993     		str	r3, [sp, #36]
 116:Core/Src/main.c **** 
 251              		.loc 1 116 3 is_stmt 1 view .LVU58
 116:Core/Src/main.c **** 
 252              		.loc 1 116 28 is_stmt 0 view .LVU59
 253 001c 0193     		str	r3, [sp, #4]
 254 001e 0293     		str	r3, [sp, #8]
 255 0020 0393     		str	r3, [sp, #12]
 256 0022 0493     		str	r3, [sp, #16]
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 257              		.loc 1 121 3 is_stmt 1 view .LVU60
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 258              		.loc 1 121 36 is_stmt 0 view .LVU61
 259 0024 0122     		movs	r2, #1
 260 0026 0A92     		str	r2, [sp, #40]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 261              		.loc 1 122 3 is_stmt 1 view .LVU62
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 262              		.loc 1 122 30 is_stmt 0 view .LVU63
 263 0028 4FF48033 		mov	r3, #65536
 264 002c 0B93     		str	r3, [sp, #44]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 265              		.loc 1 123 3 is_stmt 1 view .LVU64
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 266              		.loc 1 124 3 view .LVU65
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 267              		.loc 1 124 30 is_stmt 0 view .LVU66
 268 002e 0E92     		str	r2, [sp, #56]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 269              		.loc 1 125 3 is_stmt 1 view .LVU67
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 13


 270              		.loc 1 125 34 is_stmt 0 view .LVU68
 271 0030 0222     		movs	r2, #2
 272 0032 1192     		str	r2, [sp, #68]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 273              		.loc 1 126 3 is_stmt 1 view .LVU69
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 274              		.loc 1 126 35 is_stmt 0 view .LVU70
 275 0034 1293     		str	r3, [sp, #72]
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 276              		.loc 1 127 3 is_stmt 1 view .LVU71
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 277              		.loc 1 127 32 is_stmt 0 view .LVU72
 278 0036 4FF48013 		mov	r3, #1048576
 279 003a 1393     		str	r3, [sp, #76]
 128:Core/Src/main.c ****   {
 280              		.loc 1 128 3 is_stmt 1 view .LVU73
 128:Core/Src/main.c ****   {
 281              		.loc 1 128 7 is_stmt 0 view .LVU74
 282 003c 0AA8     		add	r0, sp, #40
 283 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 284              	.LVL5:
 128:Core/Src/main.c ****   {
 285              		.loc 1 128 6 view .LVU75
 286 0042 E8B9     		cbnz	r0, .L20
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 287              		.loc 1 135 3 is_stmt 1 view .LVU76
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 288              		.loc 1 135 31 is_stmt 0 view .LVU77
 289 0044 0F23     		movs	r3, #15
 290 0046 0593     		str	r3, [sp, #20]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 291              		.loc 1 137 3 is_stmt 1 view .LVU78
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 292              		.loc 1 137 34 is_stmt 0 view .LVU79
 293 0048 0223     		movs	r3, #2
 294 004a 0693     		str	r3, [sp, #24]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 295              		.loc 1 138 3 is_stmt 1 view .LVU80
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 296              		.loc 1 138 35 is_stmt 0 view .LVU81
 297 004c 0023     		movs	r3, #0
 298 004e 0793     		str	r3, [sp, #28]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 299              		.loc 1 139 3 is_stmt 1 view .LVU82
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 300              		.loc 1 139 36 is_stmt 0 view .LVU83
 301 0050 4FF48062 		mov	r2, #1024
 302 0054 0892     		str	r2, [sp, #32]
 140:Core/Src/main.c **** 
 303              		.loc 1 140 3 is_stmt 1 view .LVU84
 140:Core/Src/main.c **** 
 304              		.loc 1 140 36 is_stmt 0 view .LVU85
 305 0056 0993     		str	r3, [sp, #36]
 142:Core/Src/main.c ****   {
 306              		.loc 1 142 3 is_stmt 1 view .LVU86
 142:Core/Src/main.c ****   {
 307              		.loc 1 142 7 is_stmt 0 view .LVU87
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 14


 308 0058 0121     		movs	r1, #1
 309 005a 05A8     		add	r0, sp, #20
 310 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 311              	.LVL6:
 142:Core/Src/main.c ****   {
 312              		.loc 1 142 6 view .LVU88
 313 0060 80B9     		cbnz	r0, .L21
 146:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 314              		.loc 1 146 3 is_stmt 1 view .LVU89
 146:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 315              		.loc 1 146 38 is_stmt 0 view .LVU90
 316 0062 1223     		movs	r3, #18
 317 0064 0193     		str	r3, [sp, #4]
 147:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 318              		.loc 1 147 3 is_stmt 1 view .LVU91
 147:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 319              		.loc 1 147 35 is_stmt 0 view .LVU92
 320 0066 4FF48043 		mov	r3, #16384
 321 006a 0393     		str	r3, [sp, #12]
 148:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 322              		.loc 1 148 3 is_stmt 1 view .LVU93
 148:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 323              		.loc 1 148 35 is_stmt 0 view .LVU94
 324 006c 4FF48003 		mov	r3, #4194304
 325 0070 0493     		str	r3, [sp, #16]
 149:Core/Src/main.c ****   {
 326              		.loc 1 149 3 is_stmt 1 view .LVU95
 149:Core/Src/main.c ****   {
 327              		.loc 1 149 7 is_stmt 0 view .LVU96
 328 0072 01A8     		add	r0, sp, #4
 329 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 330              	.LVL7:
 149:Core/Src/main.c ****   {
 331              		.loc 1 149 6 view .LVU97
 332 0078 30B9     		cbnz	r0, .L22
 153:Core/Src/main.c **** 
 333              		.loc 1 153 1 view .LVU98
 334 007a 15B0     		add	sp, sp, #84
 335              	.LCFI8:
 336              		.cfi_remember_state
 337              		.cfi_def_cfa_offset 4
 338              		@ sp needed
 339 007c 5DF804FB 		ldr	pc, [sp], #4
 340              	.L20:
 341              	.LCFI9:
 342              		.cfi_restore_state
 130:Core/Src/main.c ****   }
 343              		.loc 1 130 5 is_stmt 1 view .LVU99
 344 0080 FFF7FEFF 		bl	Error_Handler
 345              	.LVL8:
 346              	.L21:
 144:Core/Src/main.c ****   }
 347              		.loc 1 144 5 view .LVU100
 348 0084 FFF7FEFF 		bl	Error_Handler
 349              	.LVL9:
 350              	.L22:
 151:Core/Src/main.c ****   }
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 15


 351              		.loc 1 151 5 view .LVU101
 352 0088 FFF7FEFF 		bl	Error_Handler
 353              	.LVL10:
 354              		.cfi_endproc
 355              	.LFE69:
 357              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 358              		.align	2
 359              	.LC0:
 360 0000 46757420 		.ascii	"Fut mame\000"
 360      6D616D65 
 360      00
 361              		.section	.text.main,"ax",%progbits
 362              		.align	1
 363              		.global	main
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	main:
 369              	.LFB68:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 370              		.loc 1 67 1 view -0
 371              		.cfi_startproc
 372              		@ Volatile: function does not return.
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375 0000 08B5     		push	{r3, lr}
 376              	.LCFI10:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 380              		.loc 1 75 3 view .LVU103
 381 0002 FFF7FEFF 		bl	HAL_Init
 382              	.LVL11:
  82:Core/Src/main.c **** 
 383              		.loc 1 82 3 view .LVU104
 384 0006 FFF7FEFF 		bl	SystemClock_Config
 385              	.LVL12:
  89:Core/Src/main.c ****   MX_ADC1_Init();
 386              		.loc 1 89 3 view .LVU105
 387 000a FFF7FEFF 		bl	MX_GPIO_Init
 388              	.LVL13:
  90:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 389              		.loc 1 90 3 view .LVU106
 390 000e FFF7FEFF 		bl	MX_ADC1_Init
 391              	.LVL14:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 392              		.loc 1 91 3 view .LVU107
 393 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 394              	.LVL15:
 395              	.L24:
  98:Core/Src/main.c ****   {
 396              		.loc 1 98 3 discriminator 1 view .LVU108
 397              	.LBB8:
 101:Core/Src/main.c ****     HAL_Delay(500);
 398              		.loc 1 101 5 discriminator 1 view .LVU109
 399 0016 0921     		movs	r1, #9
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 16


 400 0018 0348     		ldr	r0, .L26
 401 001a FFF7FEFF 		bl	CDC_Transmit_FS
 402              	.LVL16:
 102:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 403              		.loc 1 102 5 discriminator 1 view .LVU110
 404 001e 4FF4FA70 		mov	r0, #500
 405 0022 FFF7FEFF 		bl	HAL_Delay
 406              	.LVL17:
 407              	.LBE8:
  98:Core/Src/main.c ****   {
 408              		.loc 1 98 9 discriminator 1 view .LVU111
 409 0026 F6E7     		b	.L24
 410              	.L27:
 411              		.align	2
 412              	.L26:
 413 0028 00000000 		.word	.LC0
 414              		.cfi_endproc
 415              	.LFE68:
 417              		.global	hadc1
 418              		.section	.bss.hadc1,"aw",%nobits
 419              		.align	2
 420              		.set	.LANCHOR0,. + 0
 423              	hadc1:
 424 0000 00000000 		.space	48
 424      00000000 
 424      00000000 
 424      00000000 
 424      00000000 
 425              		.text
 426              	.Letext0:
 427              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 428              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 429              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 430              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 431              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 432              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 433              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 434              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 435              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 436              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 437              		.file 13 "USB_DEVICE/App/usb_device.h"
 438              		.file 14 "<built-in>"
ARM GAS  C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:74     .text.MX_GPIO_Init:0000002c $d
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:79     .text.Error_Handler:00000000 $t
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:85     .text.Error_Handler:00000000 Error_Handler
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:117    .text.MX_ADC1_Init:00000000 $t
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:122    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:211    .text.MX_ADC1_Init:0000004c $d
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:217    .text.SystemClock_Config:00000000 $t
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:223    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:358    .rodata.main.str1.4:00000000 $d
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:362    .text.main:00000000 $t
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:368    .text.main:00000000 main
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:413    .text.main:00000028 $d
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:423    .bss.hadc1:00000000 hadc1
C:\Users\adivd\AppData\Local\Temp\ccTaDV0T.s:419    .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
CDC_Transmit_FS
HAL_Delay
